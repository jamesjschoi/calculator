{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jchoi\\\\Downloads\\\\scripting-3-day-03\\\\day-03\\\\a-03-react-calculator-base-start\\\\src\\\\components\\\\Calculator.js\",\n    _s = $RefreshSig$();\n\nimport { calculatorButtons } from \"../globals/calculator-button-data\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Calculator() {\n  _s();\n\n  console.log(eval(\"5\" + \"+\" + \"3\"));\n  const [value, setValue] = useState(0);\n  const [result, setResult] = useState(\"0\");\n  const [operator, setOperator] = useState(null);\n  const [waitingForOperand, setWaitingForOperand] = useState(false); //handle click for digits\n\n  const inputDigit = e => {\n    if (waitingForOperand) {\n      var _e$target;\n\n      // setValue(e.target?.value);\n      setResult((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value.toString());\n      setWaitingForOperand(false);\n    } else {\n      var _e$target2, _e$target3, _e$target4, _e$target5;\n\n      // setValue(value === null ? e.target?.value : parseFloat(result + e.target?.value.toString()));\n      setResult(result === \"0\" ? (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value.toString() : result + ((_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.value.toString())); // setValue(result === null ? parseFloat(e.target?.value.toString()) : parseFloat(value + e.target?.value.toString()));\n\n      setValue(value === \"0\" ? (_e$target4 = e.target) === null || _e$target4 === void 0 ? void 0 : _e$target4.value : parseFloat(result + ((_e$target5 = e.target) === null || _e$target5 === void 0 ? void 0 : _e$target5.value.toString()))); // console.log(result, value);\n    }\n  }; //all clear\n\n\n  const allClear = () => {\n    setValue(0);\n    setResult(\"0\");\n    setOperator(null);\n    setWaitingForOperand(false);\n  }; //clear\n\n\n  const clear = () => {\n    setValue(0);\n    setResult(\"0\");\n  }; //calculation\n\n\n  const calc = () => {\n    const nextValue = parseFloat(result);\n    const computedValue = eval(value.toString() + operator.toString() + nextValue.toString());\n\n    if (operator === \"*\") {\n      setResult(computedValue);\n      setValue(parseFloat(computedValue));\n    } else if (operator) {\n      setResult(computedValue);\n      setValue(parseFloat(computedValue));\n    }\n\n    if (operator === \"/\") {\n      setResult(computedValue);\n      setValue(parseFloat(computedValue));\n    }\n\n    if (operator === \"+\") {\n      setResult(computedValue);\n      setValue(parseFloat(computedValue));\n    }\n\n    if (operator === \"-\") {\n      setResult(computedValue);\n      setValue(parseFloat(computedValue));\n    } // const operation = (operator, prevValue, nextValue) => {\n    //     console.log(operator, prevValue, nextValue)\n    //     if (operator === \"=\") {\n    //         return eval(prevValue + operator + nextValue)\n    //     }\n    // if (operator === \"/\") {\n    //     return prevValue / nextValue\n    // } else if (operator === \"*\") {\n    //     return prevValue * nextValue\n    // } else if (operator === \"+\") {\n    //     return prevValue + nextValue\n    // } else if (operator === \"-\") {\n    //     return prevValue - nextValue\n    // } else if (operator === \"=\") {\n    //     return eval( prevValue + operator + nextValue )\n    // }\n    // if (operator === \"/\") {\n    //    return prevValue / nextValue\n    // } else if (operator === \"*\") {\n    //   return  prevValue * nextValue\n    // } else if (operator === \"+\") {\n    //    return prevValue + nextValue\n    // } else if (operator === \"-\") {\n    //    return prevValue - nextValue\n    // } else if (operator === \"=\") {\n    //    return nextValue\n    // };\n    // };\n    // const operations = {\n    //     '/': (prevValue, nextValue) => prevValue / nextValue,\n    //     '*': (prevValue, nextValue) => prevValue * nextValue,\n    //     '+': (prevValue, nextValue) => prevValue + nextValue,\n    //     '-': (prevValue, nextValue) => prevValue - nextValue,\n    //     '=': (prevValue, nextValue) => nextValue\n    // }\n    // if (value == null) {\n    //     setValue(inputValue);\n    // } else if (operator) {\n    //     const currentValue = value || 0;\n    //     const computedValue = operation(operator, currentValue.toString(), inputValue.toString());\n    // const computedValue = operations[operator](currentValue, inputValue);\n    // setValue(parseFloat(computedValue));\n    // setResult(computedValue);\n    // setValue(computedValue);\n    // setResult(computedValue.toString());\n    // };\n    // try {\n    //     setResult(eval(result).toString());\n    // } catch {\n    //     setResult(\"\");\n    // }\n\n  }; //input dot\n\n\n  const dot = () => {\n    if (waitingForOperand) {\n      setResult(\".\");\n      setWaitingForOperand(false);\n    } else if (result.indexOf(\".\") === -1) {\n      setResult(result + \".\");\n      setWaitingForOperand(false);\n    }\n  }; //toggle sign\n\n\n  const toggleSign = () => {\n    const newValue = parseFloat(result) * -1;\n    setResult(result.charAt(0) === \"-\" ? result.substring(1) : \"-\" + result);\n    setValue(newValue);\n  }; //percent\n\n\n  const percent = () => {\n    setResult(parseFloat(result / 100).toString());\n  }; //square root\n\n\n  const sqrRoot = () => {\n    setResult(parseFloat(Math.sqrt(result)).toString());\n  }; //operator\n\n\n  const operatorSign = e => {\n    var _e$target6, _e$target7;\n\n    setOperator((_e$target6 = e.target) === null || _e$target6 === void 0 ? void 0 : _e$target6.value);\n    console.log((_e$target7 = e.target) === null || _e$target7 === void 0 ? void 0 : _e$target7.value);\n    setWaitingForOperand(true);\n  }; // const performOperation = (operator) => {\n  // const nextValue = parseFloat(result);\n  // const operations = {\n  // '/': (prevValue, nextValue) => prevValue / nextValue,\n  // '*': (prevValue, nextValue) => prevValue * nextValue,\n  // '+': (prevValue, nextValue) => prevValue + nextValue,\n  // '-': (prevValue, nextValue) => prevValue - nextValue,\n  // '=': (prevValue, nextValue) => nextValue\n  // };\n  // function operation(prevValue, nextValue, operator) {\n  //     return eval(prevValue + operator + nextValue);\n  // };\n  // if (value == null) {\n  //     setValue(nextValue);\n  // } else if (operator) {\n  //     const currentValue = value || 0;\n  //     const computedValue = eval(currentValue.toString() + operator + nextValue.toString());\n  //     // const computedValue = operations(operator, currentValue.toString(), nextValue.toString());\n  //     // const computedValue = operations[operator](currentValue, nextValue)\n  //     setValue(parseFloat(computedValue));\n  //     setResult(computedValue);\n  // };\n  //     setOperator(operator);\n  //     setWaitingForOperand(true);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calc-numbers\",\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: allClear,\n        type: calculatorButtons[0].type,\n        className: calculatorButtons[0].className,\n        value: calculatorButtons[0].value,\n        children: calculatorButtons[0].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clear,\n        type: calculatorButtons[1].type,\n        className: calculatorButtons[1].className,\n        value: calculatorButtons[1].value,\n        children: calculatorButtons[1].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inputDigit,\n        type: calculatorButtons[2].type,\n        className: calculatorButtons[2].className,\n        value: calculatorButtons[2].value,\n        children: calculatorButtons[2].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inputDigit,\n        type: calculatorButtons[3].type,\n        className: calculatorButtons[3].className,\n        value: calculatorButtons[3].value,\n        children: calculatorButtons[3].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inputDigit,\n        type: calculatorButtons[4].type,\n        className: calculatorButtons[4].className,\n        value: calculatorButtons[4].value,\n        children: calculatorButtons[4].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inputDigit,\n        type: calculatorButtons[5].type,\n        className: calculatorButtons[5].className,\n        value: calculatorButtons[5].value,\n        children: calculatorButtons[5].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inputDigit,\n        type: calculatorButtons[6].type,\n        className: calculatorButtons[6].className,\n        value: calculatorButtons[6].value,\n        children: calculatorButtons[6].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inputDigit,\n        type: calculatorButtons[7].type,\n        className: calculatorButtons[7].className,\n        value: calculatorButtons[7].value,\n        children: calculatorButtons[7].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inputDigit,\n        type: calculatorButtons[8].type,\n        className: calculatorButtons[8].className,\n        value: calculatorButtons[8].value,\n        children: calculatorButtons[8].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inputDigit,\n        type: calculatorButtons[9].type,\n        className: calculatorButtons[9].className,\n        value: calculatorButtons[9].value,\n        children: calculatorButtons[9].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inputDigit,\n        type: calculatorButtons[10].type,\n        className: calculatorButtons[10].className,\n        value: calculatorButtons[10].value,\n        children: calculatorButtons[10].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inputDigit,\n        type: calculatorButtons[11].type,\n        className: calculatorButtons[11].className,\n        value: calculatorButtons[11].value,\n        children: calculatorButtons[11].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: operatorSign,\n        type: calculatorButtons[12].type,\n        className: calculatorButtons[12].className,\n        value: calculatorButtons[12].value,\n        children: calculatorButtons[12].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: operatorSign,\n        type: calculatorButtons[13].type,\n        className: calculatorButtons[13].className,\n        value: calculatorButtons[13].value,\n        children: calculatorButtons[13].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: operatorSign,\n        type: calculatorButtons[14].type,\n        className: calculatorButtons[14].className,\n        value: calculatorButtons[14].value,\n        children: calculatorButtons[14].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: operatorSign,\n        type: calculatorButtons[15].type,\n        className: calculatorButtons[15].className,\n        value: calculatorButtons[15].value,\n        children: calculatorButtons[15].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calc,\n        type: calculatorButtons[16].type,\n        className: calculatorButtons[16].className,\n        value: calculatorButtons[16].value,\n        children: calculatorButtons[16].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: calculatorButtons[17].type,\n        className: calculatorButtons[17].className,\n        value: calculatorButtons[17].value,\n        children: calculatorButtons[17].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: calculatorButtons[18].type,\n        className: calculatorButtons[18].className,\n        value: calculatorButtons[18].value,\n        children: calculatorButtons[18].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: calculatorButtons[19].type,\n        className: calculatorButtons[19].className,\n        value: calculatorButtons[19].value,\n        children: calculatorButtons[19].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: calculatorButtons[20].type,\n        className: calculatorButtons[20].className,\n        value: calculatorButtons[20].value,\n        children: calculatorButtons[20].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: calculatorButtons[21].type,\n        className: calculatorButtons[21].className,\n        value: calculatorButtons[21].value,\n        children: calculatorButtons[21].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: dot,\n        type: calculatorButtons[22].type,\n        className: calculatorButtons[22].className,\n        value: calculatorButtons[22].value,\n        children: calculatorButtons[22].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSign,\n        type: calculatorButtons[23].type,\n        className: calculatorButtons[23].className,\n        value: calculatorButtons[23].value,\n        children: calculatorButtons[23].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: percent,\n        type: calculatorButtons[24].type,\n        className: calculatorButtons[24].className,\n        value: calculatorButtons[24].value,\n        children: calculatorButtons[24].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sqrRoot,\n        type: calculatorButtons[25].type,\n        className: calculatorButtons[25].className,\n        value: calculatorButtons[25].value,\n        children: calculatorButtons[25].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Calculator, \"cH785K1TCODVbRheDRif9I7CUFI=\");\n\n_c = Calculator;\n;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["C:/Users/jchoi/Downloads/scripting-3-day-03/day-03/a-03-react-calculator-base-start/src/components/Calculator.js"],"names":["calculatorButtons","useState","Calculator","console","log","eval","value","setValue","result","setResult","operator","setOperator","waitingForOperand","setWaitingForOperand","inputDigit","e","target","toString","parseFloat","allClear","clear","calc","nextValue","computedValue","dot","indexOf","toggleSign","newValue","charAt","substring","percent","sqrRoot","Math","sqrt","operatorSign","type","className","text"],"mappings":"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","sourcesContent":["import { calculatorButtons } from \"../globals/calculator-button-data\";\r\nimport { useState } from 'react';\r\n\r\nfunction Calculator() {\r\n    console.log(eval(\"5\" + \"+\" + \"3\"))\r\n    const [value, setValue] = useState(0);\r\n    const [result, setResult] = useState(\"0\");\r\n    const [operator, setOperator] = useState(null);\r\n    const [waitingForOperand, setWaitingForOperand] = useState(false);\r\n\r\n    //handle click for digits\r\n    const inputDigit = e => {\r\n        if (waitingForOperand) {\r\n            // setValue(e.target?.value);\r\n            setResult(e.target?.value.toString());\r\n            setWaitingForOperand(false);\r\n        } else {\r\n            // setValue(value === null ? e.target?.value : parseFloat(result + e.target?.value.toString()));\r\n            setResult(result === \"0\" ? e.target?.value.toString() : result + e.target?.value.toString());\r\n            // setValue(result === null ? parseFloat(e.target?.value.toString()) : parseFloat(value + e.target?.value.toString()));\r\n            setValue(value === \"0\" ? e.target?.value : parseFloat(result + e.target?.value.toString()));\r\n            // console.log(result, value);\r\n        }\r\n    };\r\n\r\n    //all clear\r\n    const allClear = () => {\r\n        setValue(0);\r\n        setResult(\"0\");\r\n        setOperator(null);\r\n        setWaitingForOperand(false);\r\n    }\r\n\r\n    //clear\r\n    const clear = () => {\r\n        setValue(0);\r\n        setResult(\"0\");\r\n    };\r\n\r\n    //calculation\r\n    const calc = () => {\r\n        const nextValue = parseFloat(result);\r\n        const computedValue = eval(value.toString() + operator.toString() + nextValue.toString())\r\n\r\n        if (operator === \"*\") {\r\n            setResult(computedValue);\r\n            setValue(parseFloat(computedValue));\r\n        } else if (operator) {\r\n            setResult(computedValue);\r\n            setValue(parseFloat(computedValue));\r\n        }\r\n        if (operator === \"/\") {\r\n            setResult(computedValue);\r\n            setValue(parseFloat(computedValue));\r\n        }\r\n        if (operator === \"+\") {\r\n            setResult(computedValue);\r\n            setValue(parseFloat(computedValue));\r\n        }\r\n        if (operator === \"-\") {\r\n            setResult(computedValue);\r\n            setValue(parseFloat(computedValue));\r\n        }\r\n        \r\n\r\n        // const operation = (operator, prevValue, nextValue) => {\r\n\r\n        //     console.log(operator, prevValue, nextValue)\r\n\r\n        //     if (operator === \"=\") {\r\n        //         return eval(prevValue + operator + nextValue)\r\n        //     }\r\n            // if (operator === \"/\") {\r\n            //     return prevValue / nextValue\r\n            // } else if (operator === \"*\") {\r\n            //     return prevValue * nextValue\r\n            // } else if (operator === \"+\") {\r\n            //     return prevValue + nextValue\r\n            // } else if (operator === \"-\") {\r\n            //     return prevValue - nextValue\r\n            // } else if (operator === \"=\") {\r\n            //     return eval( prevValue + operator + nextValue )\r\n            // }\r\n            // if (operator === \"/\") {\r\n            //    return prevValue / nextValue\r\n            // } else if (operator === \"*\") {\r\n            //   return  prevValue * nextValue\r\n            // } else if (operator === \"+\") {\r\n            //    return prevValue + nextValue\r\n            // } else if (operator === \"-\") {\r\n            //    return prevValue - nextValue\r\n            // } else if (operator === \"=\") {\r\n            //    return nextValue\r\n            // };\r\n        // };\r\n\r\n        \r\n\r\n        // const operations = {\r\n        //     '/': (prevValue, nextValue) => prevValue / nextValue,\r\n        //     '*': (prevValue, nextValue) => prevValue * nextValue,\r\n        //     '+': (prevValue, nextValue) => prevValue + nextValue,\r\n        //     '-': (prevValue, nextValue) => prevValue - nextValue,\r\n        //     '=': (prevValue, nextValue) => nextValue\r\n        // }\r\n\r\n        // if (value == null) {\r\n        //     setValue(inputValue);\r\n        // } else if (operator) {\r\n        //     const currentValue = value || 0;\r\n        //     const computedValue = operation(operator, currentValue.toString(), inputValue.toString());\r\n            // const computedValue = operations[operator](currentValue, inputValue);\r\n            \r\n            // setValue(parseFloat(computedValue));\r\n            // setResult(computedValue);\r\n            // setValue(computedValue);\r\n            // setResult(computedValue.toString());\r\n        // };\r\n\r\n\r\n        // try {\r\n        //     setResult(eval(result).toString());\r\n        // } catch {\r\n        //     setResult(\"\");\r\n        // }\r\n    };\r\n    \r\n    //input dot\r\n    const dot = () => {\r\n        if (waitingForOperand) {\r\n            setResult(\".\")\r\n            setWaitingForOperand(false);\r\n        } else if (result.indexOf(\".\") === -1) {\r\n            setResult(result + \".\");\r\n            setWaitingForOperand(false);\r\n        }\r\n    };\r\n\r\n    //toggle sign\r\n    const toggleSign = () => {\r\n        const newValue = parseFloat(result) * -1;\r\n        setResult(result.charAt(0) === \"-\" ? result.substring(1) : \"-\" + result);\r\n        setValue(newValue);\r\n    };\r\n\r\n    //percent\r\n    const percent = () => {\r\n        setResult(parseFloat(result / 100).toString());\r\n    };\r\n\r\n    //square root\r\n    const sqrRoot = () => {\r\n        setResult(parseFloat(Math.sqrt(result)).toString());\r\n    };\r\n\r\n    //operator\r\n    const operatorSign = e => {\r\n        setOperator(e.target?.value);\r\n        console.log(e.target?.value)\r\n        setWaitingForOperand(true);\r\n    };\r\n\r\n    // const performOperation = (operator) => {\r\n        // const nextValue = parseFloat(result);\r\n\r\n        // const operations = {\r\n        // '/': (prevValue, nextValue) => prevValue / nextValue,\r\n        // '*': (prevValue, nextValue) => prevValue * nextValue,\r\n        // '+': (prevValue, nextValue) => prevValue + nextValue,\r\n        // '-': (prevValue, nextValue) => prevValue - nextValue,\r\n        // '=': (prevValue, nextValue) => nextValue\r\n        // };\r\n\r\n        // function operation(prevValue, nextValue, operator) {\r\n        //     return eval(prevValue + operator + nextValue);\r\n        // };\r\n\r\n        // if (value == null) {\r\n        //     setValue(nextValue);\r\n        // } else if (operator) {\r\n        //     const currentValue = value || 0;\r\n        //     const computedValue = eval(currentValue.toString() + operator + nextValue.toString());\r\n        //     // const computedValue = operations(operator, currentValue.toString(), nextValue.toString());\r\n        //     // const computedValue = operations[operator](currentValue, nextValue)\r\n        //     setValue(parseFloat(computedValue));\r\n        //     setResult(computedValue);\r\n        // };\r\n\r\n    //     setOperator(operator);\r\n    //     setWaitingForOperand(true);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"display-container\">\r\n            <div className=\"calc-numbers\">{result}</div>\r\n        </div>\r\n        <div className=\"container\">\r\n            <button onClick={allClear} type={calculatorButtons[0].type} className={calculatorButtons[0].className} value={calculatorButtons[0].value}>{calculatorButtons[0].text}</button>\r\n            <button onClick={clear} type={calculatorButtons[1].type} className={calculatorButtons[1].className} value={calculatorButtons[1].value}>{calculatorButtons[1].text}</button>\r\n            <button onClick={inputDigit} type={calculatorButtons[2].type} className={calculatorButtons[2].className} value={calculatorButtons[2].value}>{calculatorButtons[2].text}</button>\r\n            <button onClick={inputDigit} type={calculatorButtons[3].type} className={calculatorButtons[3].className} value={calculatorButtons[3].value}>{calculatorButtons[3].text}</button>\r\n            <button onClick={inputDigit} type={calculatorButtons[4].type} className={calculatorButtons[4].className} value={calculatorButtons[4].value}>{calculatorButtons[4].text}</button>\r\n            <button onClick={inputDigit} type={calculatorButtons[5].type} className={calculatorButtons[5].className} value={calculatorButtons[5].value}>{calculatorButtons[5].text}</button>\r\n            <button onClick={inputDigit} type={calculatorButtons[6].type} className={calculatorButtons[6].className} value={calculatorButtons[6].value}>{calculatorButtons[6].text}</button>\r\n            <button onClick={inputDigit} type={calculatorButtons[7].type} className={calculatorButtons[7].className} value={calculatorButtons[7].value}>{calculatorButtons[7].text}</button>\r\n            <button onClick={inputDigit} type={calculatorButtons[8].type} className={calculatorButtons[8].className} value={calculatorButtons[8].value}>{calculatorButtons[8].text}</button>\r\n            <button onClick={inputDigit} type={calculatorButtons[9].type} className={calculatorButtons[9].className} value={calculatorButtons[9].value}>{calculatorButtons[9].text}</button>\r\n            <button onClick={inputDigit} type={calculatorButtons[10].type} className={calculatorButtons[10].className} value={calculatorButtons[10].value}>{calculatorButtons[10].text}</button>\r\n            <button onClick={inputDigit} type={calculatorButtons[11].type} className={calculatorButtons[11].className} value={calculatorButtons[11].value}>{calculatorButtons[11].text}</button>\r\n            <button onClick={operatorSign} type={calculatorButtons[12].type} className={calculatorButtons[12].className} value={calculatorButtons[12].value}>{calculatorButtons[12].text}</button>\r\n            <button onClick={operatorSign} type={calculatorButtons[13].type} className={calculatorButtons[13].className} value={calculatorButtons[13].value}>{calculatorButtons[13].text}</button>\r\n            <button onClick={operatorSign} type={calculatorButtons[14].type} className={calculatorButtons[14].className} value={calculatorButtons[14].value}>{calculatorButtons[14].text}</button>\r\n            <button onClick={operatorSign} type={calculatorButtons[15].type} className={calculatorButtons[15].className} value={calculatorButtons[15].value}>{calculatorButtons[15].text}</button>\r\n            <button onClick={calc} type={calculatorButtons[16].type} className={calculatorButtons[16].className} value={calculatorButtons[16].value}>{calculatorButtons[16].text}</button>\r\n            <button type={calculatorButtons[17].type} className={calculatorButtons[17].className} value={calculatorButtons[17].value}>{calculatorButtons[17].text}</button>\r\n            <button type={calculatorButtons[18].type} className={calculatorButtons[18].className} value={calculatorButtons[18].value}>{calculatorButtons[18].text}</button>\r\n            <button type={calculatorButtons[19].type} className={calculatorButtons[19].className} value={calculatorButtons[19].value}>{calculatorButtons[19].text}</button>\r\n            <button type={calculatorButtons[20].type} className={calculatorButtons[20].className} value={calculatorButtons[20].value}>{calculatorButtons[20].text}</button>\r\n            <button type={calculatorButtons[21].type} className={calculatorButtons[21].className} value={calculatorButtons[21].value}>{calculatorButtons[21].text}</button>\r\n            <button onClick={dot} type={calculatorButtons[22].type} className={calculatorButtons[22].className} value={calculatorButtons[22].value}>{calculatorButtons[22].text}</button>\r\n            <button onClick={toggleSign} type={calculatorButtons[23].type} className={calculatorButtons[23].className} value={calculatorButtons[23].value}>{calculatorButtons[23].text}</button>\r\n            <button onClick={percent} type={calculatorButtons[24].type} className={calculatorButtons[24].className} value={calculatorButtons[24].value}>{calculatorButtons[24].text}</button>\r\n            <button onClick={sqrRoot} type={calculatorButtons[25].type} className={calculatorButtons[25].className} value={calculatorButtons[25].value}>{calculatorButtons[25].text}</button>\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Calculator"]},"metadata":{},"sourceType":"module"}